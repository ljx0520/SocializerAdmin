# This is an auto-generated Django model module.
# You'll have to do the following manually to clean this up:
#   * Rearrange models' order
#   * Make sure each model has one field with primary_key=True
#   * Make sure each ForeignKey and OneToOneField has `on_delete` set to the desired behavior
#   * Remove `managed = False` lines if you wish to allow Django to create, modify, and delete the table
# Feel free to rename the models, but don't rename db_table values or field names.
from django.db import models


class Disputes(models.Model):
    id = models.UUIDField(primary_key=True)
    created_at = models.DateTimeField(blank=True, null=True)
    updated_at = models.DateTimeField(blank=True, null=True)
    deleted_at = models.BigIntegerField(blank=True, null=True)
    user_id = models.TextField()
    dispute_object = models.TextField()
    object_id = models.TextField(blank=True, null=True)
    dispute_type = models.TextField(blank=True, null=True)
    dispute_reason = models.TextField(blank=True, null=True)
    dispute_status = models.TextField()
    dispute_result = models.TextField(blank=True, null=True)
    dispute_notes = models.TextField(blank=True, null=True)
    dispute_resolved_at = models.DateTimeField(blank=True, null=True)
    dispute_resolved_by = models.TextField(blank=True, null=True)
    notes = models.JSONField(blank=True, null=True)
    dispute_processed_at = models.DateTimeField(blank=True, null=True)
    dispute_processed_by = models.TextField(blank=True, null=True)
    attachments = models.JSONField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'disputes'


class SigninProviders(models.Model):
    id = models.UUIDField(primary_key=True)
    created_at = models.DateTimeField(blank=True, null=True)
    updated_at = models.DateTimeField(blank=True, null=True)
    deleted_at = models.BigIntegerField(blank=True, null=True)
    signin_provider_type = models.TextField()
    name = models.TextField(blank=True, null=True)
    secondary_signin_provider = models.TextField(blank=True, null=True)
    uid = models.TextField(blank=True, null=True)
    user_id = models.TextField()

    class Meta:
        managed = False
        db_table = 'signin_providers'
        unique_together = (('secondary_signin_provider', 'uid'),)


class Users(models.Model):
    id = models.UUIDField(primary_key=True)
    created_at = models.DateTimeField(blank=True, null=True)
    updated_at = models.DateTimeField(blank=True, null=True)
    deleted_at = models.BigIntegerField(blank=True, null=True)
    email = models.TextField()
    email_verified_at = models.DateTimeField(blank=True, null=True)
    mobile = models.TextField(blank=True, null=True)
    mobile_verified_at = models.DateTimeField(blank=True, null=True)
    password = models.TextField()
    is_admin = models.BooleanField(blank=True, null=True)
    last_login_at = models.DateTimeField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'users'
        unique_together = (('deleted_at', 'email'),)
